<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xduo.shortlink.project.dao.mapper.LinkAccessLogsMapper">


    <select id="listTopIpByShortLink" resultType="java.util.HashMap">
        SELECT
        ip,
        COUNT(ip) AS count
        FROM
        t_link_access_logs
        WHERE
        full_short_url = #{fullShortUrl}
        AND gid = #{gid}
        AND create_time BETWEEN #{startDate} AND #{endDate}
        GROUP BY
        full_short_url, gid, ip
        ORDER BY
        count DESC
        LIMIT 5;
    </select>
    <select id="findUvTypeCntByShortLink" resultType="java.util.HashMap">


    </select>
    <select id="selectUvTypeByUser" resultType="java.util.Map">
        SELECT
        user,
        create_time,
        CASE
        WHEN create_time = (SELECT MIN(create_time)
        FROM t_link_access_logs
        WHERE user = t.user
        AND full_short_url = #{fullShortUrl}
        AND gid = #{gid}
        AND create_time BETWEEN #{startDate} AND #{endDate}) THEN '新访客'
        ELSE '老访客'
        END AS uvType
        FROM
        t_link_access_logs t
        WHERE
        full_short_url = #{fullShortUrl}
        AND gid = #{gid}
        AND create_time BETWEEN #{startDate} AND #{endDate}
        AND user IN
        <foreach item="item" index="index" collection="userAccessLogsList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="listGroupTopIpByShortLink" resultType="java.util.HashMap">
        SELECT
        ip,
        COUNT(ip) AS count
        FROM
        t_link_access_logs
        WHERE
        gid = #{gid}
        AND create_time BETWEEN #{startDate} AND #{endDate}
        GROUP BY
        gid, ip
        ORDER BY
        count DESC
        LIMIT 5;

    </select>
    <select id="findGroupUvTypeCntByShortLink" resultType="java.util.HashMap">
        SELECT
        CASE
        WHEN first_visit.create_time BETWEEN start_date AND end_date THEN 'New Visitor'
        ELSE 'Old Visitor'
        END AS VisitorType,
        COUNT(*) AS VisitCount
        FROM (
        SELECT
        user,
        MIN(create_time) AS first_visit
        FROM t_link_access_logs
        WHERE create_time &lt; end_date
                            GROUP BY user
        ) AS old_visitors
        RIGHT JOIN t_link_access_logs AS recent_visits
        ON old_visitors.user = recent_visits.user
        WHERE recent_visits.create_time BETWEEN start_date AND end_date
        GROUP BY VisitorType;
    </select>
    <select id="selectGroupUvTypeByUser" resultType="java.util.Map">
        SELECT
        user,
        CASE
        WHEN MIN(create_time) BETWEEN #{startDate} AND #{endDate} THEN '新访客'
        ELSE '老访客'
        END AS uvType
        FROM
        t_link_access_logs
        WHERE
        gid = #{gid}
        AND user IN
        <foreach item="item" index="index" collection="userAccessLogsList" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY
        user;

    </select>

</mapper>

